{
"version":3,
"file":"module$node_modules$core_js$internals$export.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,4CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CACrGH,MAAJ,CAAaC,OAAA,CAAQ,8CAAR,CACb,KAAIG,yBAA2BH,OAAA,CAAQ,0EAAR,CAA2DI,CAAAA,CAA1F,CACIC,4BAA8BL,OAAA,CAAQ,sEAAR,CADlC,CAEIM,cAAgBN,OAAA,CAAQ,uDAAR,CAFpB,CAGIO,qBAAuBP,OAAA,CAAQ,8DAAR,CAH3B;AAIIQ,0BAA4BR,OAAA,CAAQ,mEAAR,CAJhC,CAKIS,SAAWT,OAAA,CAAQ,iDAAR,CAiBfC,OAAOC,CAAAA,OAAP,CAAiBQ,QAAS,CAACC,OAAD,CAAUC,MAAV,CAAkB,CAC1C,IAAIC,OAASF,OAAQG,CAAAA,MAArB,CACIC,OAASJ,OAAQZ,CAAAA,MADrB,CAEIiB,OAASL,OAAQM,CAAAA,IAFrB,CAGIC,MAHJ,CAGYJ,MAHZ,CAGoBK,GAQpB,IANEL,MAMF,CAPIC,MAAJ,CACWhB,MADX,CAEWiB,MAAJ,CACIjB,MAAA,CAAOc,MAAP,CADJ,EACsBN,oBAAA,CAAqBM,MAArB,CAA6B,EAA7B,CADtB,CAG2BO,CAAtBrB,MAAA,CAAOc,MAAP,CAAsBO,EAAJ,EAAIA,EAAAA,SAElC,CAAY,IAAKD,GAAL,GAAYP,OAAZ,CAAoB,CAC9B,IAAAS,eAAiBT,MAAA,CAAOO,GAAP,CAGf,KAAAG,eAFEX,OAAQY,CAAAA,cAAZ,EACEC,MADF;AACerB,wBAAA,CAAyBW,MAAzB,CAAiCK,GAAjC,CADf,GAEiCK,MAAWC,CAAAA,KAF5C,CAGwBX,MAAA,CAAOK,GAAP,CACxBD,OAAA,CAAST,QAAA,CAASM,MAAA,CAASI,GAAT,CAAeN,MAAf,EAAyBG,MAAA,CAAS,GAAT,CAAe,GAAxC,EAA+CG,GAAxD,CAA6DR,OAAQe,CAAAA,MAArE,CAET,IAAI,CAACR,MAAL,EAAkCS,IAAAA,EAAlC,GAAeL,cAAf,CAA6C,CAC3C,GAAI,MAAOD,eAAX,EAA6B,MAAOC,eAApC,CAAoD,QACpDd,0BAAA,CAA0Ba,cAA1B,CAA0CC,cAA1C,CAF2C,CAK7C,CAAIX,OAAQiB,CAAAA,IAAZ,EAAqBN,cAArB,EAAuCA,cAAeM,CAAAA,IAAtD,GACEvB,2BAAA,CAA4BgB,cAA5B,CAA4C,MAA5C,CAAoD,CAAA,CAApD,CAEFf,cAAA,CAAcQ,MAAd,CAAsBK,GAAtB,CAA2BE,cAA3B,CAA2CV,OAA3C,CAhB8B,CAZU,CAxB6D;",
"sources":["node_modules/core-js/internals/export.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$core_js$internals$export\"] = function(global,require,module,exports) {\nvar global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || defineGlobalProperty(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty == typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    defineBuiltIn(target, key, sourceProperty, options);\n  }\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","getOwnPropertyDescriptor","f","createNonEnumerableProperty","defineBuiltIn","defineGlobalProperty","copyConstructorProperties","isForced","module.exports","options","source","TARGET","target","GLOBAL","STATIC","stat","FORCED","key","prototype","sourceProperty","targetProperty","dontCallGetSet","descriptor","value","forced","undefined","sham"]
}
