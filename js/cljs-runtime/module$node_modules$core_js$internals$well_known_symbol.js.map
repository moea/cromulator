{
"version":3,
"file":"module$node_modules$core_js$internals$well_known_symbol.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,uDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAChHH,MAAJ,CAAaC,OAAA,CAAQ,8CAAR,CACTG,QAAAA,CAASH,OAAA,CAAQ,8CAAR,CACb,KAAII,OAASJ,OAAA,CAAQ,wDAAR,CAAb,CACIK,IAAML,OAAA,CAAQ,2CAAR,CADV,CAEIM,cAAgBN,OAAA,CAAQ,oEAAR,CAFpB,CAGIO,kBAAoBP,OAAA,CAAQ,yDAAR,CAHxB;AAKIQ,sBAAwBL,OAAA,CAAO,KAAP,CAL5B,CAMIM,OAASV,MAAOU,CAAAA,MANpB,CAOIC,UAAYD,MAAZC,EAAsBD,MAAA,CAAO,KAAP,CAP1B,CAQIE,sBAAwBJ,iBAAA,CAAoBE,MAApB,CAA6BA,MAA7B,EAAuCA,MAAOG,CAAAA,aAA9C,EAA+DP,GAE3FJ,OAAOC,CAAAA,OAAP,CAAiBW,QAAS,CAACC,IAAD,CAAO,CAC/B,GAAI,CAACV,MAAA,CAAOI,qBAAP,CAA8BM,IAA9B,CAAL,EAA8CR,CAAAA,aAA9C,EAAqG,QAArG,EAA+D,MAAOE,sBAAA,CAAsBM,IAAtB,CAAtE,CAAgH,CAC9G,IAAIC,YAAc,SAAdA,CAA0BD,IAC1BR,cAAJ,EAAqBF,MAAA,CAAOK,MAAP,CAAeK,IAAf,CAArB,CACEN,qBAAA,CAAsBM,IAAtB,CADF,CACgCL,MAAA,CAAOK,IAAP,CADhC,CAGEN,qBAAA,CAAsBM,IAAtB,CAHF,CAEWP,iBAAJ,EAAyBG,SAAzB,CACyBA,SAAA,CAAUK,WAAV,CADzB,CAGyBJ,qBAAA,CAAsBI,WAAtB,CAP8E,CAS9G,MAAOP,sBAAA,CAAsBM,IAAtB,CAVsB,CAbmF;",
"sources":["node_modules/core-js/internals/well-known-symbol.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$core_js$internals$well_known_symbol\"] = function(global,require,module,exports) {\nvar global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar hasOwn = require('../internals/has-own-property');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar symbolFor = Symbol && Symbol['for'];\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {\n    var description = 'Symbol.' + name;\n    if (NATIVE_SYMBOL && hasOwn(Symbol, name)) {\n      WellKnownSymbolsStore[name] = Symbol[name];\n    } else if (USE_SYMBOL_AS_UID && symbolFor) {\n      WellKnownSymbolsStore[name] = symbolFor(description);\n    } else {\n      WellKnownSymbolsStore[name] = createWellKnownSymbol(description);\n    }\n  } return WellKnownSymbolsStore[name];\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","shared","hasOwn","uid","NATIVE_SYMBOL","USE_SYMBOL_AS_UID","WellKnownSymbolsStore","Symbol","symbolFor","createWellKnownSymbol","withoutSetter","module.exports","name","description"]
}
