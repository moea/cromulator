{
"version":3,
"file":"module$node_modules$core_js$internals$to_primitive.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,kDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC/G,IAAIC,KAAOH,OAAA,CAAQ,qDAAR,CAAX,CACII,SAAWJ,OAAA,CAAQ,iDAAR,CADf,CAEIK,SAAWL,OAAA,CAAQ,iDAAR,CAFf,CAGIM,UAAYN,OAAA,CAAQ,kDAAR,CAHhB,CAIIO,oBAAsBP,OAAA,CAAQ,6DAAR,CACtBQ,OAAAA,CAAkBR,OAAA,CAAQ,yDAAR,CAEtB;IAAIS,WAAaC,SAAjB,CACIC,aAAeH,MAAA,CAAgB,aAAhB,CAInBP,OAAOC,CAAAA,OAAP,CAAiBU,QAAS,CAACC,KAAD,CAAQC,IAAR,CAAc,CACtC,GAAI,CAACV,QAAA,CAASS,KAAT,CAAL,EAAwBR,QAAA,CAASQ,KAAT,CAAxB,CAAyC,MAAOA,MAChD,KAAIE,aAAeT,SAAA,CAAUO,KAAV,CAAiBF,YAAjB,CAEnB,IAAII,YAAJ,CAAkB,CACHC,IAAAA,EAAb,GAAIF,IAAJ,GAAwBA,IAAxB,CAA+B,SAA/B,CACAG,MAAA,CAASd,IAAA,CAAKY,YAAL,CAAmBF,KAAnB,CAA0BC,IAA1B,CACT,IAAI,CAACV,QAAA,CAASa,KAAT,CAAL,EAAyBZ,QAAA,CAASY,KAAT,CAAzB,CAA2C,MAAOA,MAClD,MAAMR,WAAA,CAAW,yCAAX,CAAN,CAJgB,CAMLO,IAAAA,EAAb,GAAIF,IAAJ,GAAwBA,IAAxB,CAA+B,QAA/B,CACA,OAAOP,oBAAA,CAAoBM,KAApB,CAA2BC,IAA3B,CAX+B,CAbuE;",
"sources":["node_modules/core-js/internals/to-primitive.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$core_js$internals$to_primitive\"] = function(global,require,module,exports) {\nvar call = require('../internals/function-call');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar getMethod = require('../internals/get-method');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $TypeError = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw $TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","call","isObject","isSymbol","getMethod","ordinaryToPrimitive","wellKnownSymbol","$TypeError","TypeError","TO_PRIMITIVE","module.exports","input","pref","exoticToPrim","undefined","result"]
}
