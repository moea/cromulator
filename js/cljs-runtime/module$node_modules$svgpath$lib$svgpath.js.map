{
"version":3,
"file":"module$node_modules$svgpath$lib$svgpath.js",
"lineCount":16,
"mappings":"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",
"sources":["node_modules/svgpath/lib/svgpath.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$svgpath$lib$svgpath\"] = function(global,require,module,exports) {\n// SVG Path transformations library\n//\n// Usage:\n//\n//    SvgPath('...')\n//      .translate(-150, -100)\n//      .scale(0.5)\n//      .translate(-150, -100)\n//      .toFixed(1)\n//      .toString()\n//\n\n'use strict';\n\n\nvar pathParse      = require('./path_parse');\nvar transformParse = require('./transform_parse');\nvar matrix         = require('./matrix');\nvar a2c            = require('./a2c');\nvar ellipse        = require('./ellipse');\n\n\n// Class constructor\n//\nfunction SvgPath(path) {\n  if (!(this instanceof SvgPath)) { return new SvgPath(path); }\n\n  var pstate = pathParse(path);\n\n  // Array of path segments.\n  // Each segment is array [command, param1, param2, ...]\n  this.segments = pstate.segments;\n\n  // Error message on parse error.\n  this.err      = pstate.err;\n\n  // Transforms stack for lazy evaluation\n  this.__stack    = [];\n}\n\nSvgPath.from = function (src) {\n  if (typeof src === 'string') return new SvgPath(src);\n\n  if (src instanceof SvgPath) {\n    // Create empty object\n    var s = new SvgPath('');\n\n    // Clone properies\n    s.err = src.err;\n    s.segments = src.segments.map(function (sgm) { return sgm.slice(); });\n    s.__stack = src.__stack.map(function (m) {\n      return matrix().matrix(m.toArray());\n    });\n\n    return s;\n  }\n\n  throw new Error('SvgPath.from: invalid param type ' + src);\n};\n\n\nSvgPath.prototype.__matrix = function (m) {\n  var self = this, i;\n\n  // Quick leave for empty matrix\n  if (!m.queue.length) { return; }\n\n  this.iterate(function (s, index, x, y) {\n    var p, result, name, isRelative;\n\n    switch (s[0]) {\n\n      // Process 'assymetric' commands separately\n      case 'v':\n        p      = m.calc(0, s[1], true);\n        result = (p[0] === 0) ? [ 'v', p[1] ] : [ 'l', p[0], p[1] ];\n        break;\n\n      case 'V':\n        p      = m.calc(x, s[1], false);\n        result = (p[0] === m.calc(x, y, false)[0]) ? [ 'V', p[1] ] : [ 'L', p[0], p[1] ];\n        break;\n\n      case 'h':\n        p      = m.calc(s[1], 0, true);\n        result = (p[1] === 0) ? [ 'h', p[0] ] : [ 'l', p[0], p[1] ];\n        break;\n\n      case 'H':\n        p      = m.calc(s[1], y, false);\n        result = (p[1] === m.calc(x, y, false)[1]) ? [ 'H', p[0] ] : [ 'L', p[0], p[1] ];\n        break;\n\n      case 'a':\n      case 'A':\n        // ARC is: ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\n\n        // Drop segment if arc is empty (end point === start point)\n        /*if ((s[0] === 'A' && s[6] === x && s[7] === y) ||\n            (s[0] === 'a' && s[6] === 0 && s[7] === 0)) {\n          return [];\n        }*/\n\n        // Transform rx, ry and the x-axis-rotation\n        var ma = m.toArray();\n        var e = ellipse(s[1], s[2], s[3]).transform(ma);\n\n        // flip sweep-flag if matrix is not orientation-preserving\n        if (ma[0] * ma[3] - ma[1] * ma[2] < 0) {\n          s[5] = s[5] ? '0' : '1';\n        }\n\n        // Transform end point as usual (without translation for relative notation)\n        p = m.calc(s[6], s[7], s[0] === 'a');\n\n        // Empty arcs can be ignored by renderer, but should not be dropped\n        // to avoid collisions with `S A S` and so on. Replace with empty line.\n        if ((s[0] === 'A' && s[6] === x && s[7] === y) ||\n            (s[0] === 'a' && s[6] === 0 && s[7] === 0)) {\n          result = [ s[0] === 'a' ? 'l' : 'L', p[0], p[1] ];\n          break;\n        }\n\n        // if the resulting ellipse is (almost) a segment ...\n        if (e.isDegenerate()) {\n          // replace the arc by a line\n          result = [ s[0] === 'a' ? 'l' : 'L', p[0], p[1] ];\n        } else {\n          // if it is a real ellipse\n          // s[0], s[4] and s[5] are not modified\n          result = [ s[0], e.rx, e.ry, e.ax, s[4], s[5], p[0], p[1] ];\n        }\n\n        break;\n\n      case 'm':\n        // Edge case. The very first `m` should be processed as absolute, if happens.\n        // Make sense for coord shift transforms.\n        isRelative = index > 0;\n\n        p = m.calc(s[1], s[2], isRelative);\n        result = [ 'm', p[0], p[1] ];\n        break;\n\n      default:\n        name       = s[0];\n        result     = [ name ];\n        isRelative = (name.toLowerCase() === name);\n\n        // Apply transformations to the segment\n        for (i = 1; i < s.length; i += 2) {\n          p = m.calc(s[i], s[i + 1], isRelative);\n          result.push(p[0], p[1]);\n        }\n    }\n\n    self.segments[index] = result;\n  }, true);\n};\n\n\n// Apply stacked commands\n//\nSvgPath.prototype.__evaluateStack = function () {\n  var m, i;\n\n  if (!this.__stack.length) { return; }\n\n  if (this.__stack.length === 1) {\n    this.__matrix(this.__stack[0]);\n    this.__stack = [];\n    return;\n  }\n\n  m = matrix();\n  i = this.__stack.length;\n\n  while (--i >= 0) {\n    m.matrix(this.__stack[i].toArray());\n  }\n\n  this.__matrix(m);\n  this.__stack = [];\n};\n\n\n// Convert processed SVG Path back to string\n//\nSvgPath.prototype.toString = function () {\n  var result = '', prevCmd = '', cmdSkipped = false;\n\n  this.__evaluateStack();\n\n  for (var i = 0, len = this.segments.length; i < len; i++) {\n    var segment = this.segments[i];\n    var cmd = segment[0];\n\n    // Command not repeating => store\n    if (cmd !== prevCmd || cmd === 'm' || cmd === 'M') {\n      // workaround for FontForge SVG importing bug, keep space between \"z m\".\n      if (cmd === 'm' && prevCmd === 'z') result += ' ';\n      result += cmd;\n\n      cmdSkipped = false;\n    } else {\n      cmdSkipped = true;\n    }\n\n    // Store segment params\n    for (var pos = 1; pos < segment.length; pos++) {\n      var val = segment[pos];\n      // Space can be skipped\n      // 1. After command (always)\n      // 2. For negative value (with '-' at start)\n      if (pos === 1) {\n        if (cmdSkipped && val >= 0) result += ' ';\n      } else if (val >= 0) result += ' ';\n\n      result += val;\n    }\n\n    prevCmd = cmd;\n  }\n\n  return result;\n};\n\n\n// Translate path to (x [, y])\n//\nSvgPath.prototype.translate = function (x, y) {\n  this.__stack.push(matrix().translate(x, y || 0));\n  return this;\n};\n\n\n// Scale path to (sx [, sy])\n// sy = sx if not defined\n//\nSvgPath.prototype.scale = function (sx, sy) {\n  this.__stack.push(matrix().scale(sx, (!sy && (sy !== 0)) ? sx : sy));\n  return this;\n};\n\n\n// Rotate path around point (sx [, sy])\n// sy = sx if not defined\n//\nSvgPath.prototype.rotate = function (angle, rx, ry) {\n  this.__stack.push(matrix().rotate(angle, rx || 0, ry || 0));\n  return this;\n};\n\n\n// Skew path along the X axis by `degrees` angle\n//\nSvgPath.prototype.skewX = function (degrees) {\n  this.__stack.push(matrix().skewX(degrees));\n  return this;\n};\n\n\n// Skew path along the Y axis by `degrees` angle\n//\nSvgPath.prototype.skewY = function (degrees) {\n  this.__stack.push(matrix().skewY(degrees));\n  return this;\n};\n\n\n// Apply matrix transform (array of 6 elements)\n//\nSvgPath.prototype.matrix = function (m) {\n  this.__stack.push(matrix().matrix(m));\n  return this;\n};\n\n\n// Transform path according to \"transform\" attr of SVG spec\n//\nSvgPath.prototype.transform = function (transformString) {\n  if (!transformString.trim()) {\n    return this;\n  }\n  this.__stack.push(transformParse(transformString));\n  return this;\n};\n\n\n// Round coords with given decimal precition.\n// 0 by default (to integers)\n//\nSvgPath.prototype.round = function (d) {\n  var contourStartDeltaX = 0, contourStartDeltaY = 0, deltaX = 0, deltaY = 0, l;\n\n  d = d || 0;\n\n  this.__evaluateStack();\n\n  this.segments.forEach(function (s) {\n    var isRelative = (s[0].toLowerCase() === s[0]);\n\n    switch (s[0]) {\n      case 'H':\n      case 'h':\n        if (isRelative) { s[1] += deltaX; }\n        deltaX = s[1] - s[1].toFixed(d);\n        s[1] = +s[1].toFixed(d);\n        return;\n\n      case 'V':\n      case 'v':\n        if (isRelative) { s[1] += deltaY; }\n        deltaY = s[1] - s[1].toFixed(d);\n        s[1] = +s[1].toFixed(d);\n        return;\n\n      case 'Z':\n      case 'z':\n        deltaX = contourStartDeltaX;\n        deltaY = contourStartDeltaY;\n        return;\n\n      case 'M':\n      case 'm':\n        if (isRelative) {\n          s[1] += deltaX;\n          s[2] += deltaY;\n        }\n\n        deltaX = s[1] - s[1].toFixed(d);\n        deltaY = s[2] - s[2].toFixed(d);\n\n        contourStartDeltaX = deltaX;\n        contourStartDeltaY = deltaY;\n\n        s[1] = +s[1].toFixed(d);\n        s[2] = +s[2].toFixed(d);\n        return;\n\n      case 'A':\n      case 'a':\n        // [cmd, rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\n        if (isRelative) {\n          s[6] += deltaX;\n          s[7] += deltaY;\n        }\n\n        deltaX = s[6] - s[6].toFixed(d);\n        deltaY = s[7] - s[7].toFixed(d);\n\n        s[1] = +s[1].toFixed(d);\n        s[2] = +s[2].toFixed(d);\n        s[3] = +s[3].toFixed(d + 2); // better precision for rotation\n        s[6] = +s[6].toFixed(d);\n        s[7] = +s[7].toFixed(d);\n        return;\n\n      default:\n        // a c l q s t\n        l = s.length;\n\n        if (isRelative) {\n          s[l - 2] += deltaX;\n          s[l - 1] += deltaY;\n        }\n\n        deltaX = s[l - 2] - s[l - 2].toFixed(d);\n        deltaY = s[l - 1] - s[l - 1].toFixed(d);\n\n        s.forEach(function (val, i) {\n          if (!i) { return; }\n          s[i] = +s[i].toFixed(d);\n        });\n        return;\n    }\n  });\n\n  return this;\n};\n\n\n// Apply iterator function to all segments. If function returns result,\n// current segment will be replaced to array of returned segments.\n// If empty array is returned, current regment will be deleted.\n//\nSvgPath.prototype.iterate = function (iterator, keepLazyStack) {\n  var segments = this.segments,\n      replacements = {},\n      needReplace = false,\n      lastX = 0,\n      lastY = 0,\n      countourStartX = 0,\n      countourStartY = 0;\n  var i, j, newSegments;\n\n  if (!keepLazyStack) {\n    this.__evaluateStack();\n  }\n\n  segments.forEach(function (s, index) {\n\n    var res = iterator(s, index, lastX, lastY);\n\n    if (Array.isArray(res)) {\n      replacements[index] = res;\n      needReplace = true;\n    }\n\n    var isRelative = (s[0] === s[0].toLowerCase());\n\n    // calculate absolute X and Y\n    switch (s[0]) {\n      case 'm':\n      case 'M':\n        lastX = s[1] + (isRelative ? lastX : 0);\n        lastY = s[2] + (isRelative ? lastY : 0);\n        countourStartX = lastX;\n        countourStartY = lastY;\n        return;\n\n      case 'h':\n      case 'H':\n        lastX = s[1] + (isRelative ? lastX : 0);\n        return;\n\n      case 'v':\n      case 'V':\n        lastY = s[1] + (isRelative ? lastY : 0);\n        return;\n\n      case 'z':\n      case 'Z':\n        // That make sence for multiple contours\n        lastX = countourStartX;\n        lastY = countourStartY;\n        return;\n\n      default:\n        lastX = s[s.length - 2] + (isRelative ? lastX : 0);\n        lastY = s[s.length - 1] + (isRelative ? lastY : 0);\n    }\n  });\n\n  // Replace segments if iterator return results\n\n  if (!needReplace) { return this; }\n\n  newSegments = [];\n\n  for (i = 0; i < segments.length; i++) {\n    if (typeof replacements[i] !== 'undefined') {\n      for (j = 0; j < replacements[i].length; j++) {\n        newSegments.push(replacements[i][j]);\n      }\n    } else {\n      newSegments.push(segments[i]);\n    }\n  }\n\n  this.segments = newSegments;\n\n  return this;\n};\n\n\n// Converts segments from relative to absolute\n//\nSvgPath.prototype.abs = function () {\n\n  this.iterate(function (s, index, x, y) {\n    var name = s[0],\n        nameUC = name.toUpperCase(),\n        i;\n\n    // Skip absolute commands\n    if (name === nameUC) { return; }\n\n    s[0] = nameUC;\n\n    switch (name) {\n      case 'v':\n        // v has shifted coords parity\n        s[1] += y;\n        return;\n\n      case 'a':\n        // ARC is: ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\n        // touch x, y only\n        s[6] += x;\n        s[7] += y;\n        return;\n\n      default:\n        for (i = 1; i < s.length; i++) {\n          s[i] += i % 2 ? x : y; // odd values are X, even - Y\n        }\n    }\n  }, true);\n\n  return this;\n};\n\n\n// Converts segments from absolute to relative\n//\nSvgPath.prototype.rel = function () {\n\n  this.iterate(function (s, index, x, y) {\n    var name = s[0],\n        nameLC = name.toLowerCase(),\n        i;\n\n    // Skip relative commands\n    if (name === nameLC) { return; }\n\n    // Don't touch the first M to avoid potential confusions.\n    if (index === 0 && name === 'M') { return; }\n\n    s[0] = nameLC;\n\n    switch (name) {\n      case 'V':\n        // V has shifted coords parity\n        s[1] -= y;\n        return;\n\n      case 'A':\n        // ARC is: ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\n        // touch x, y only\n        s[6] -= x;\n        s[7] -= y;\n        return;\n\n      default:\n        for (i = 1; i < s.length; i++) {\n          s[i] -= i % 2 ? x : y; // odd values are X, even - Y\n        }\n    }\n  }, true);\n\n  return this;\n};\n\n\n// Converts arcs to cubic b\u00e9zier curves\n//\nSvgPath.prototype.unarc = function () {\n  this.iterate(function (s, index, x, y) {\n    var new_segments, nextX, nextY, result = [], name = s[0];\n\n    // Skip anything except arcs\n    if (name !== 'A' && name !== 'a') { return null; }\n\n    if (name === 'a') {\n      // convert relative arc coordinates to absolute\n      nextX = x + s[6];\n      nextY = y + s[7];\n    } else {\n      nextX = s[6];\n      nextY = s[7];\n    }\n\n    new_segments = a2c(x, y, nextX, nextY, s[4], s[5], s[1], s[2], s[3]);\n\n    // Degenerated arcs can be ignored by renderer, but should not be dropped\n    // to avoid collisions with `S A S` and so on. Replace with empty line.\n    if (new_segments.length === 0) {\n      return [ [ s[0] === 'a' ? 'l' : 'L', s[6], s[7] ] ];\n    }\n\n    new_segments.forEach(function (s) {\n      result.push([ 'C', s[2], s[3], s[4], s[5], s[6], s[7] ]);\n    });\n\n    return result;\n  });\n\n  return this;\n};\n\n\n// Converts smooth curves (with missed control point) to generic curves\n//\nSvgPath.prototype.unshort = function () {\n  var segments = this.segments;\n  var prevControlX, prevControlY, prevSegment;\n  var curControlX, curControlY;\n\n  // TODO: add lazy evaluation flag when relative commands supported\n\n  this.iterate(function (s, idx, x, y) {\n    var name = s[0], nameUC = name.toUpperCase(), isRelative;\n\n    // First command MUST be M|m, it's safe to skip.\n    // Protect from access to [-1] for sure.\n    if (!idx) { return; }\n\n    if (nameUC === 'T') { // quadratic curve\n      isRelative = (name === 't');\n\n      prevSegment = segments[idx - 1];\n\n      if (prevSegment[0] === 'Q') {\n        prevControlX = prevSegment[1] - x;\n        prevControlY = prevSegment[2] - y;\n      } else if (prevSegment[0] === 'q') {\n        prevControlX = prevSegment[1] - prevSegment[3];\n        prevControlY = prevSegment[2] - prevSegment[4];\n      } else {\n        prevControlX = 0;\n        prevControlY = 0;\n      }\n\n      curControlX = -prevControlX;\n      curControlY = -prevControlY;\n\n      if (!isRelative) {\n        curControlX += x;\n        curControlY += y;\n      }\n\n      segments[idx] = [\n        isRelative ? 'q' : 'Q',\n        curControlX, curControlY,\n        s[1], s[2]\n      ];\n\n    } else if (nameUC === 'S') { // cubic curve\n      isRelative = (name === 's');\n\n      prevSegment = segments[idx - 1];\n\n      if (prevSegment[0] === 'C') {\n        prevControlX = prevSegment[3] - x;\n        prevControlY = prevSegment[4] - y;\n      } else if (prevSegment[0] === 'c') {\n        prevControlX = prevSegment[3] - prevSegment[5];\n        prevControlY = prevSegment[4] - prevSegment[6];\n      } else {\n        prevControlX = 0;\n        prevControlY = 0;\n      }\n\n      curControlX = -prevControlX;\n      curControlY = -prevControlY;\n\n      if (!isRelative) {\n        curControlX += x;\n        curControlY += y;\n      }\n\n      segments[idx] = [\n        isRelative ? 'c' : 'C',\n        curControlX, curControlY,\n        s[1], s[2], s[3], s[4]\n      ];\n    }\n  });\n\n  return this;\n};\n\n\nmodule.exports = SvgPath;\n\n};"],
"names":["shadow$provide","global","require","module","exports","SvgPath","path","pstate","pathParse","segments","err","__stack","transformParse","matrix","a2c","ellipse","from","SvgPath.from","src","s","map","sgm","slice","m","toArray","Error","prototype","__matrix","SvgPath.prototype.__matrix","self","i","queue","length","iterate","index","x","y","p","calc","result","ma","e","transform","isDegenerate","rx","ry","ax","name","isRelative","toLowerCase","push","__evaluateStack","SvgPath.prototype.__evaluateStack","toString","SvgPath.prototype.toString","prevCmd","len","segment","cmd","cmdSkipped","pos","val","translate","SvgPath.prototype.translate","scale","SvgPath.prototype.scale","sx","sy","rotate","SvgPath.prototype.rotate","angle","skewX","SvgPath.prototype.skewX","degrees","skewY","SvgPath.prototype.skewY","SvgPath.prototype.matrix","SvgPath.prototype.transform","transformString","trim","round","SvgPath.prototype.round","d","contourStartDeltaX","contourStartDeltaY","deltaX","deltaY","l","forEach","toFixed","SvgPath.prototype.iterate","iterator","keepLazyStack","replacements","needReplace","lastX","lastY","countourStartX","countourStartY","j","res","Array","isArray","newSegments","abs","SvgPath.prototype.abs","nameUC","toUpperCase","rel","SvgPath.prototype.rel","nameLC","unarc","SvgPath.prototype.unarc","nextX","nextY","new_segments","unshort","SvgPath.prototype.unshort","prevControlX","prevControlY","prevSegment","curControlX","curControlY","idx"]
}
