{
"version":3,
"file":"module$node_modules$svgpath$lib$transform_parse.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,+CAAA,CAAoE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAI5G,IAAIC,OAASH,OAAA,CAAQ,wCAAR,CAAb,CAEII,WAAa,CACfC,OAAQ,CAAA,CADO,CAEfC,MAAO,CAAA,CAFQ,CAGfC,OAAQ,CAAA,CAHO,CAIfC,UAAW,CAAA,CAJI,CAKfC,MAAO,CAAA,CALQ,CAMfC,MAAO,CAAA,CANQ,CAFjB,CAWIC,aAAkB,wEAXtB,CAYIC,gBAAkB,QAGtBX,OAAOC,CAAAA,OAAP,CAAiBW,QAAuB,CAACC,eAAD,CAAkB,CACxD,IAAIT,OAAS,IAAIF,MAAjB,CACIY,GADJ,CACSC,MAGTF,gBAAgBG,CAAAA,KAAhB,CAAsBN,YAAtB,CAAoCO,CAAAA,OAApC,CAA4C,QAAS,CAACC,IAAD,CAAO,CAG1D,GAAKA,IAAKC,CAAAA,MAAV,CAGA,GAAgC,WAAhC;AAAI,MAAOhB,WAAA,CAAWe,IAAX,CAAX,CACEJ,GAAA,CAAMI,IADR,KAWA,QALAH,MAKQD,CALCI,IAAKF,CAAAA,KAAL,CAAWL,eAAX,CAA4BS,CAAAA,GAA5B,CAAgC,QAAS,CAACC,CAAD,CAAI,CACpD,MAAO,CAACA,CAAR,EAAa,CADuC,CAA7C,CAKDP,CAAAA,GAAR,EACE,KAAK,QAAL,CACwB,CAAtB,GAAIC,MAAOI,CAAAA,MAAX,EACEf,MAAOA,CAAAA,MAAP,CAAcW,MAAd,CAEF,MAEF,MAAK,OAAL,CACwB,CAAtB,GAAIA,MAAOI,CAAAA,MAAX,CACEf,MAAOC,CAAAA,KAAP,CAAaU,MAAA,CAAO,CAAP,CAAb,CAAwBA,MAAA,CAAO,CAAP,CAAxB,CADF,CAE6B,CAF7B,GAEWA,MAAOI,CAAAA,MAFlB,EAGEf,MAAOC,CAAAA,KAAP,CAAaU,MAAA,CAAO,CAAP,CAAb,CAAwBA,MAAA,CAAO,CAAP,CAAxB,CAEF,MAEF,MAAK,QAAL,CACwB,CAAtB,GAAIA,MAAOI,CAAAA,MAAX,CACEf,MAAOE,CAAAA,MAAP,CAAcS,MAAA,CAAO,CAAP,CAAd,CAAyB,CAAzB,CAA4B,CAA5B,CADF,CAE6B,CAF7B,GAEWA,MAAOI,CAAAA,MAFlB,EAGEf,MAAOE,CAAAA,MAAP,CAAcS,MAAA,CAAO,CAAP,CAAd,CAAyBA,MAAA,CAAO,CAAP,CAAzB,CAAoCA,MAAA,CAAO,CAAP,CAApC,CAEF,MAEF,MAAK,WAAL,CACwB,CAAtB,GAAIA,MAAOI,CAAAA,MAAX,CACEf,MAAOG,CAAAA,SAAP,CAAiBQ,MAAA,CAAO,CAAP,CAAjB,CAA4B,CAA5B,CADF,CAE6B,CAF7B,GAEWA,MAAOI,CAAAA,MAFlB;AAGEf,MAAOG,CAAAA,SAAP,CAAiBQ,MAAA,CAAO,CAAP,CAAjB,CAA4BA,MAAA,CAAO,CAAP,CAA5B,CAEF,MAEF,MAAK,OAAL,CACwB,CAAtB,GAAIA,MAAOI,CAAAA,MAAX,EACEf,MAAOI,CAAAA,KAAP,CAAaO,MAAA,CAAO,CAAP,CAAb,CAEF,MAEF,MAAK,OAAL,CACwB,CAAtB,GAAIA,MAAOI,CAAAA,MAAX,EACEf,MAAOK,CAAAA,KAAP,CAAaM,MAAA,CAAO,CAAP,CAAb,CAvCN,CAjB0D,CAA5D,CA8DA,OAAOX,OAnEiD,CAnBkD;",
"sources":["node_modules/svgpath/lib/transform_parse.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$svgpath$lib$transform_parse\"] = function(global,require,module,exports) {\n'use strict';\n\n\nvar Matrix = require('./matrix');\n\nvar operations = {\n  matrix: true,\n  scale: true,\n  rotate: true,\n  translate: true,\n  skewX: true,\n  skewY: true\n};\n\nvar CMD_SPLIT_RE    = /\\s*(matrix|translate|scale|rotate|skewX|skewY)\\s*\\(\\s*(.+?)\\s*\\)[\\s,]*/;\nvar PARAMS_SPLIT_RE = /[\\s,]+/;\n\n\nmodule.exports = function transformParse(transformString) {\n  var matrix = new Matrix();\n  var cmd, params;\n\n  // Split value into ['', 'translate', '10 50', '', 'scale', '2', '', 'rotate',  '-45', '']\n  transformString.split(CMD_SPLIT_RE).forEach(function (item) {\n\n    // Skip empty elements\n    if (!item.length) { return; }\n\n    // remember operation\n    if (typeof operations[item] !== 'undefined') {\n      cmd = item;\n      return;\n    }\n\n    // extract params & att operation to matrix\n    params = item.split(PARAMS_SPLIT_RE).map(function (i) {\n      return +i || 0;\n    });\n\n    // If params count is not correct - ignore command\n    switch (cmd) {\n      case 'matrix':\n        if (params.length === 6) {\n          matrix.matrix(params);\n        }\n        return;\n\n      case 'scale':\n        if (params.length === 1) {\n          matrix.scale(params[0], params[0]);\n        } else if (params.length === 2) {\n          matrix.scale(params[0], params[1]);\n        }\n        return;\n\n      case 'rotate':\n        if (params.length === 1) {\n          matrix.rotate(params[0], 0, 0);\n        } else if (params.length === 3) {\n          matrix.rotate(params[0], params[1], params[2]);\n        }\n        return;\n\n      case 'translate':\n        if (params.length === 1) {\n          matrix.translate(params[0], 0);\n        } else if (params.length === 2) {\n          matrix.translate(params[0], params[1]);\n        }\n        return;\n\n      case 'skewX':\n        if (params.length === 1) {\n          matrix.skewX(params[0]);\n        }\n        return;\n\n      case 'skewY':\n        if (params.length === 1) {\n          matrix.skewY(params[0]);\n        }\n        return;\n    }\n  });\n\n  return matrix;\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","Matrix","operations","matrix","scale","rotate","translate","skewX","skewY","CMD_SPLIT_RE","PARAMS_SPLIT_RE","module.exports","transformString","cmd","params","split","forEach","item","length","map","i"]
}
