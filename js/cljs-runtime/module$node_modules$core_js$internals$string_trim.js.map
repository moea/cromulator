{
"version":3,
"file":"module$node_modules$core_js$internals$string_trim.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,iDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC1GC,MAAAA,CAAcH,OAAA,CAAQ,6DAAR,CAClB,KAAII,uBAAyBJ,OAAA,CAAQ,gEAAR,CAA7B,CACIK,SAAWL,OAAA,CAAQ,iDAAR,CACXM,QAAAA,CAAcN,OAAA,CAAQ,mDAAR,CAElB,KAAIO,QAAUJ,MAAA,CAAY,EAAGI,CAAAA,OAAf,CACVC,QAAAA,CAAa,GAAbA,CAAmBF,OAAnBE,CAAiC,GACrC,KAAIC,MAAQC,MAAA,CAAO,GAAP,CAAaF,OAAb;AAA0BA,OAA1B,CAAuC,GAAvC,CAAZ,CACIG,MAAQD,MAAA,CAAOF,OAAP,CAAoBA,OAApB,CAAiC,IAAjC,CAGRI,QAAAA,CAAeA,QAAS,CAACC,IAAD,CAAO,CACjC,MAAO,SAAS,CAACC,KAAD,CAAQ,CAClBC,KAAAA,CAASV,QAAA,CAASD,sBAAA,CAAuBU,KAAvB,CAAT,CACTD,KAAJ,CAAW,CAAX,GAAcE,KAAd,CAAuBR,OAAA,CAAQQ,KAAR,CAAgBN,KAAhB,CAAuB,EAAvB,CAAvB,CACII,KAAJ,CAAW,CAAX,GAAcE,KAAd,CAAuBR,OAAA,CAAQQ,KAAR,CAAgBJ,KAAhB,CAAuB,EAAvB,CAAvB,CACA,OAAOI,MAJe,CADS,CASnCd,OAAOC,CAAAA,OAAP,CAAiB,CAGfc,MAAOJ,OAAA,CAAa,CAAb,CAHQ,CAMfK,IAAKL,OAAA,CAAa,CAAb,CANU,CASfM,KAAMN,OAAA,CAAa,CAAb,CATS,CArB6F;",
"sources":["node_modules/core-js/internals/string-trim.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$core_js$internals$string_trim\"] = function(global,require,module,exports) {\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toString = require('../internals/to-string');\nvar whitespaces = require('../internals/whitespaces');\n\nvar replace = uncurryThis(''.replace);\nvar whitespace = '[' + whitespaces + ']';\nvar ltrim = RegExp('^' + whitespace + whitespace + '*');\nvar rtrim = RegExp(whitespace + whitespace + '*$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod = function (TYPE) {\n  return function ($this) {\n    var string = toString(requireObjectCoercible($this));\n    if (TYPE & 1) string = replace(string, ltrim, '');\n    if (TYPE & 2) string = replace(string, rtrim, '');\n    return string;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod(3)\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","uncurryThis","requireObjectCoercible","toString","whitespaces","replace","whitespace","ltrim","RegExp","rtrim","createMethod","TYPE","$this","string","start","end","trim"]
}
