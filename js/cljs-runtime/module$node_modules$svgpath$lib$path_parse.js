shadow$provide.module$node_modules$svgpath$lib$path_parse=function(global,require,module,exports){function isSpace(ch){return 10===ch||13===ch||8232===ch||8233===ch||32===ch||9===ch||11===ch||12===ch||160===ch||5760<=ch&&0<=SPECIAL_SPACES.indexOf(ch)}function isDigit(code){return 48<=code&&57>=code}function State(path){this.index=0;this.path=path;this.max=path.length;this.result=[];this.param=0;this.err="";this.segmentStart=0;this.data=[]}function skipSpaces(state){for(;state.index<state.max&&isSpace(state.path.charCodeAt(state.index));)state.index++}
function finalizeSegment(state){var cmd=state.path[state.segmentStart];var cmdLC=cmd.toLowerCase();var params=state.data;"m"===cmdLC&&2<params.length&&(state.result.push([cmd,params[0],params[1]]),params=params.slice(2),cmdLC="l",cmd="m"===cmd?"l":"L");if("r"===cmdLC)state.result.push([cmd].concat(params));else for(;params.length>=paramCounts[cmdLC]&&(state.result.push([cmd].concat(params.splice(0,paramCounts[cmdLC]))),paramCounts[cmdLC]););}var paramCounts={a:7,c:6,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,
z:0},SPECIAL_SPACES=[5760,6158,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279];module.exports=function(svgPath){svgPath=new State(svgPath);var max=svgPath.max;for(skipSpaces(svgPath);svgPath.index<max&&!svgPath.err.length;)a:{var i,comma_found,state=svgPath,max$jscomp$0=state.max;state.segmentStart=state.index;var need_params=state.path.charCodeAt(state.index);var is_arc=97===(need_params|32);b:{switch(need_params|32){case 109:case 122:case 108:case 104:case 118:case 99:case 115:case 113:case 116:case 97:case 114:need_params=
!0;break b}need_params=!1}if(need_params){need_params=paramCounts[state.path[state.index].toLowerCase()];state.index++;skipSpaces(state);state.data=[];if(need_params)for(comma_found=!1;;){for(i=need_params;0<i;i--){if(!is_arc||3!==i&&4!==i)b:{var state$jscomp$0=state,start=state$jscomp$0.index,index=start,max$jscomp$1=state$jscomp$0.max,hasCeiling=!1,hasDecimal=!1,hasDot=!1;if(index>=max$jscomp$1)state$jscomp$0.err="SvgPath: missed param (at pos "+index+")";else{comma_found=state$jscomp$0.path.charCodeAt(index);
if(43===comma_found||45===comma_found)index++,comma_found=index<max$jscomp$1?state$jscomp$0.path.charCodeAt(index):0;if(isDigit(comma_found)||46===comma_found){if(46!==comma_found){var zeroFirst=48===comma_found;index++;comma_found=index<max$jscomp$1?state$jscomp$0.path.charCodeAt(index):0;if(zeroFirst&&index<max$jscomp$1&&comma_found&&isDigit(comma_found)){state$jscomp$0.err="SvgPath: numbers started with `0` such as `09` are illegal (at pos "+start+")";break b}for(;index<max$jscomp$1&&isDigit(state$jscomp$0.path.charCodeAt(index));)index++,
hasCeiling=!0;comma_found=index<max$jscomp$1?state$jscomp$0.path.charCodeAt(index):0}if(46===comma_found){hasDot=!0;for(index++;isDigit(state$jscomp$0.path.charCodeAt(index));)index++,hasDecimal=!0;comma_found=index<max$jscomp$1?state$jscomp$0.path.charCodeAt(index):0}if(101===comma_found||69===comma_found){if(hasDot&&!hasCeiling&&!hasDecimal){state$jscomp$0.err="SvgPath: invalid float exponent (at pos "+index+")";break b}index++;comma_found=index<max$jscomp$1?state$jscomp$0.path.charCodeAt(index):
0;43!==comma_found&&45!==comma_found||index++;if(index<max$jscomp$1&&isDigit(state$jscomp$0.path.charCodeAt(index)))for(;index<max$jscomp$1&&isDigit(state$jscomp$0.path.charCodeAt(index));)index++;else{state$jscomp$0.err="SvgPath: invalid float exponent (at pos "+index+")";break b}}state$jscomp$0.index=index;state$jscomp$0.param=parseFloat(state$jscomp$0.path.slice(start,index))+0}else state$jscomp$0.err="SvgPath: param should start with 0..9 or `.` (at pos "+index+")"}}else comma_found=state,zeroFirst=
comma_found.path.charCodeAt(comma_found.index),48===zeroFirst?(comma_found.param=0,comma_found.index++):49===zeroFirst?(comma_found.param=1,comma_found.index++):comma_found.err="SvgPath: arc flag can be 0 or 1 only (at pos "+comma_found.index+")";if(state.err.length){finalizeSegment(state);break a}state.data.push(state.param);skipSpaces(state);comma_found=!1;state.index<max$jscomp$0&&44===state.path.charCodeAt(state.index)&&(state.index++,skipSpaces(state),comma_found=!0)}if(!comma_found){if(state.index>=
state.max)break;i=state.path.charCodeAt(state.index);if(!(48<=i&&57>=i||43===i||45===i||46===i))break}}finalizeSegment(state)}else state.err="SvgPath: bad command "+state.path[state.index]+" (at pos "+state.index+")"}svgPath.result.length&&(0>"mM".indexOf(svgPath.result[0][0])?(svgPath.err="SvgPath: string should start with `M` or `m`",svgPath.result=[]):svgPath.result[0][0]="M");return{err:svgPath.err,segments:svgPath.result}}}
//# sourceMappingURL=module$node_modules$svgpath$lib$path_parse.js.map
