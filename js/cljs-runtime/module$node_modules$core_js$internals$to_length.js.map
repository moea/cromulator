{
"version":3,
"file":"module$node_modules$core_js$internals$to_length.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,+CAAA,CAAoE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC5G,IAAIC,oBAAsBH,OAAA,CAAQ,8DAAR,CAA1B,CAEII,IAAMC,IAAKD,CAAAA,GAIfH,OAAOC,CAAAA,OAAP,CAAiBI,QAAS,CAACC,QAAD,CAAW,CACnC,MAAkB,EAAX,CAAAA,QAAA,CAAeH,GAAA,CAAID,mBAAA,CAAoBI,QAApB,CAAJ,CAAmC,gBAAnC,CAAf,CAAsE,CAD1C,CAPuE;",
"sources":["node_modules/core-js/internals/to-length.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$core_js$internals$to_length\"] = function(global,require,module,exports) {\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","toIntegerOrInfinity","min","Math","module.exports","argument"]
}
